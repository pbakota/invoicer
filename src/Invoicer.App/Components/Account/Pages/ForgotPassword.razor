@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Invoicer.Models

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject IStringLocalizer<I18N> Loc

<PageTitle>@Loc["Login.Text.ForgotPassword"]</PageTitle>

<h3 class="login-heading mb-4">@Loc["Login.Text.ForgotPassword"]</h3>
<h4>@Loc["Login.Text.EnterYourEmail"]</h4>
<section>
    <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
        <DataAnnotationsValidator />

        <div class="form-floating mb-3 login-form">
            <InputText type="email" @bind-Value="Input.Email" class="form-control" id="floatingInput"
                placeholder="name@example.com" />
            <label for="floatingInput">@Loc["Login.Text.Email"]</label>
            <ValidationMessage For="() => Input.Email" class="text-danger" />
        </div>

        <div class="d-grid">
            <button class="btn btn-lg btn-login text-uppercase fw-bold mb-2"
                type="submit">@Loc["Login.Text.ResetPassword"]</button>
            <div class="text-center">
                <a class="small" href="/Account/Login">@Loc["Login.Text.BackToLogin"]</a>
            </div>
        </div>
    </EditForm>
</section>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        // For more information on how to enable account confirmation and password reset please
        // visit https://go.microsoft.com/fwlink/?LinkID=532713
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
        NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
        new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
